#!/bin/bash
solar_release=8.5.1
solar_name=solar
if [ ! -s solarmain ]
then
   echo ""
   echo "Please build solarmain before running this script."
   echo "Follow instructions in README to build solarmain."
   exit 1
fi
if [ -z "$1" -o -z "$2" ]
then
    echo ""
    echo "Usage: ./install_solar <solar-base> <solar-script-dir> "
    echo ""
    echo "<solar-base> -- location of solar lib and bin folder"
    echo "<solar-script-dir> -- location of solar startup script"
    echo ""
    echo "Example: "
    echo "./install_solar /opt/appl/solar/$solar_release /usr/local/bin"
    exit 1
fi

if [ ! -d $1 ]
then
    mkdir -p $1
    if [ ! -d $1 ]
    then
       echo ""
       echo "ERROR!"
       echo "Unable to create a directory named $1"
       echo ""
       exit 1
    fi
fi

if [ ! -w $1 ]
then
    echo ""
    echo "ERROR!"
    echo "Unable to write to directory $1"
    echo ""
    exit 1
fi

if [ ! -d $2 ]
then
   echo ""
   echo "ERROR!"
   echo "$2 is not an existing directory"
   echo "Second argument must be an existing directory"    
   echo ""
   exit 1
fi

if [ ! -w $2 ]
then
    echo ""
    echo "ERROR!"
    echo "Unable to write to directory $2"
    echo ""
    exit 1
fi

if [ -a $2/$solar_name ]
then
    echo ""
    echo "ERROR!"
    echo "$2/$solar_name already exists."
    echo "You must rename or delete old $d/$solar_name script first."
    echo ""
    exit 1
fi


# (Some versions of bash don't like this...can't understand why)
#if [[ $1 != /* || $2 != /* ]]
#then
#    echo ""
#    echo "ERROR!"
#    echo "You must specify absolute directory names which begin with /"
#    echo ""
#    exit 1
#fi

# Make custom script

echo "#!/bin/sh" >$2/$solar_name
echo "" >>$2/$solar_name
echo "SOLAR_BIN=$1/bin" >>$2/$solar_name
echo "SOLAR_LIB=$1/lib" >>$2/$solar_name
echo "" >>$2/$solar_name
echo "PATH=\$SOLAR_BIN:\$PATH" >>$2/$solar_name
echo "LD_LIBRARY_PATH=\$SOLAR_LIB:\$LD_LIBRARY_PATH" >>$2/$solar_name
echo "TCL_LIBRARY=\$SOLAR_LIB/tcl8.4" >>$2/$solar_name
echo "TK_LIBRARY=\$SOLAR_LIB/tk8.4" >>$2/$solar_name
echo "SOLAR_PROGRAM_NAME=\$0"  >>$2/$solar_name
echo "export SOLAR_BIN" >>$2/$solar_name
echo "export SOLAR_LIB" >>$2/$solar_name
echo "export PATH" >>$2/$solar_name
echo "export LD_LIBRARY_PATH" >>$2/$solar_name
echo "export TCL_LIBRARY" >>$2/$solar_name
echo "export TK_LIBRARY" >>$2/$solar_name
echo "export SOLAR_PROGRAM_NAME" >>$2/$solar_name
echo "" >>$2/$solar_name
echo "if [ ! -s \$SOLAR_BIN/solarmain ]" >>$2/$solar_name
echo "then" >>$2/$solar_name
echo "    echo \"The directory \$SOLAR_BIN for solar binaries is not accessible.\"" >>$2/$solar_name
echo "else" >>$2/$solar_name
echo "    if [ \"\$1\" = \"-noce\"  -o \"\$SOLAR_noce\" != \"\" -o \"\$#\" != \"0\" ]" >>$2/$solar_name
echo "    then" >>$2/$solar_name
echo "        \$SOLAR_BIN/solarmain \$*" >>$2/$solar_name
echo "    else" >>$2/$solar_name
echo "        \$SOLAR_BIN/rlwrap -n \$SOLAR_BIN/solarmain \$*" >>$2/$solar_name
echo "        if [ \"\$?\" != \"0\" ]" >>$2/$solar_name
echo "	      then" >>$2/$solar_name
echo "	          \$SOLAR_BIN/solarmain \$*"  >>$2/$solar_name
echo "        fi" >>$2/$solar_name
echo "    fi" >>$2/$solar_name
echo "fi" >>$2/$solar_name
chmod +x $2/$solar_name

# Finish rest of installation in solar root directory

#if [ "$1" != `pwd` ]
#then
 current_dir=$(pwd)
 cp solar.tar $1
 cd $1
 tar -xf solar.tar 
 cd $current_dir
 cp solarmain $1/bin
 if ["$1" != 'pwd' ]
 then
    rm $1/solar.tar
fi  

#fi

if [ -s $1/bin/solarmain ]
then
    #cp $1/bin/solarmain.static $1/bin/solarmain


# determine if 32 bit
    # if [ "64" != `getconf LONG_BIT` ]
    # then
      # echo "it appears this is a 32 bit system"
      # cp $1/bin/s32/* $1/bin
      # echo "Using solarmain.s32"

   # else 
# 64 bit systems

      #cp $1/bin/solarmain.64 $1/bin/solarmain
      $2/$solar_name exit
      # if [ $? != 0 ]
      # then
          # #cp $1/bin/solarmain.d64 $1/bin/solarmain
          # echo "Using solarmain.d64"
      # else
          # echo "Using solarmain.64"
      # fi
    # fi

    echo "***********************************************************"

    echo " "
    echo " "
    echo "    *** Successful Installation ***"

else
    echo "Error unpacking files to $1"
fi
echo ""
